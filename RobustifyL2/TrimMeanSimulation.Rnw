\documentclass{article}
\usepackage{amsmath,amsfonts,bm,fullpage}
\usepackage{natbib}
\bibliographystyle{abbrvnat}
\newcommand{\ProjMean}{{\widehat{\bm S}_{2}}}
\newcommand{\R}{{\mathbb{R}}}
\begin{document}

\begin{center}
\Large{\bf Robustifying the Projected Mean}
\end{center}
\normalsize
This is the literature I have found methods to robustify the $L_2$ estimator for various data types.  Specifically I focus on the trimmed and winsorized means.

<<setup,include=FALSE>>=
library(rotations)
source("/Users/stanfill/Documents/GitHub/robustSO3/robustFunctions.R")

# set global chunk options
opts_chunk$set(fig.path='Figure/', fig.align='center', fig.show='hold',dev='png')
options(replace.assign=TRUE,width=50)
@
 
\section{Trimmed Means}

Assume the sample of size $n$, $x_1,\dots,x_n$, has empirical distribution function $F_n$.  The sample $\alpha$-trimmed mean, according to \cite{huber2009} page 10, is
\[
\bar{X}_\alpha=\frac{1}{1-2\alpha}\int_{\alpha}^{1-\alpha}F_n^{-1}(t)dt.
\]

The following is taken from Section 4 of \cite{laha2011}. In the circular context, suppose $\theta$ is a circular random variable with p.d.f.~$f(\theta)$ and $0<\gamma\leq 0.5$ is fixed.  Let $\alpha,\beta$ be two points on the unit circle satisfying
\[
\int_{\beta}^\alpha f(\theta)d\theta=1-2\gamma.
\] 
The circular $\gamma$-trimmed mean is
\[
\mu_\gamma=\text{arg}\left[\frac{1}{1-2\gamma}\int^{\alpha}_\beta\exp(\imath\theta)f(\theta)d\theta\right].
\]
In their Theorem 4.1 they show it is SB-robust for the circular von Mises distribution.  In \cite{laha2013} they show it is SB-robust for the wrapped normal distribution too.  Remember SB-robustness is always with respect to some dispersion measure.

<<tmean,eval=FALSE,include=FALSE>>=
rangle<-rcayley
n<-50
kappa<-100
p1<-.1
p2<-.1
Scont<-genR(pi/2) #slippage mean

Rs<-ruarsCont(n,rangle,kappa,p1,S=id.SO3,Scont)
Qs<-Q4(Rs)
tMean<-trimMean(Qs,p2,HnFun)

dist(mean(Qs))
dist(trimMean(Qs,p2,HnFun))
dist(trimMean(Qs,p2,HnFun,T))
dist(median(Qs))
plot(Rs,center=SO3(tMean),show_estimates='all')
@

\section{Weighted Means}

According to \cite{huber2009} Section 11.2.2 the current best possible break down for a $d$-dimensional affine equivilant estimator is
\[
\epsilon^*=\frac{n-2d+1}{2n-2d+1}.
\]
So for us, this would be $(n-5)/(2n-5)$.  This break-down is achieved by the weighted average of the points $\bm x_i$ from $\bm X$ with weights $w_i=w(r_i)$ where
\[
r_i=\sup_{\bm u}\frac{\bm u^\top\bm x_i-\text{MED}(\bm u^\top\bm X)}{\text{MAD}(\bm u^\top\bm X)}
\]
and $w(r)$ is a strictly positive, decreasing fuction of $r\geq 0$, with $w(r)r$ bounded.  I think $r_i$ can be replaced with any one-dimensional projection of the outlyingness of the $\bm x_i$.  For example, $H_n$ or the distance the mean moves when $\bm R_i$ is removed.

<<weightedMean,include=FALSE,eval=FALSE>>=
Rs<-Q4(ruarsCont(n,rangle,kappa,p1,S=id.SO3,Scont))
wsHn<-1/sqrt(HnFun(Rs))
wsDist<-1/MeanMove(Rs)

dist(weighted.mean(Rs,wsHn))
dist(weighted.mean(Rs,wsDist))
dist(mean(Rs))
dist(median(Rs))
dist(trimMean(Qs,p2,HnFun))
@

\section{Winsorized Means}

%\bibliographystyle{plain}
\bibliography{../OutlierDetection/RobustRefs}
\end{document}